name: CI/CD Pipeline

on:
    push:
        branches: [main, feature/add-favorites-endpoint]
    pull_request:
        branches: [main]

env:
    DEBUG: true

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_PASSWORD: postgres
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.12"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run migrations
              run: |
                  python manage.py migrate

            - name: Run tests
              run: |
                  python manage.py test

            - name: Collect static files
              run: |
                  python manage.py collectstatic --noinput

    build-and-deploy:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:latest

            - name: Deploy to server (optional)
              run: |
                  echo "Deployment step - add your deployment commands here"
                  # Example: ssh to server and pull latest image
                  # ssh user@server "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:latest && docker-compose up -d"
