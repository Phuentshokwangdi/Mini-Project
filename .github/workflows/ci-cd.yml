name: Django CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # match your Dockerfile version for consistency

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      # Step 4: Run Django tests
      - name: Run Django tests
        env:
          DJANGO_SETTINGS_MODULE: MINI_PROJECT_WEATHER.settings # adjust if needed
        run: |
          python manage.py migrate
          python manage.py test

      # Step 5: Set up Docker Buildx (for better build performance)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Build and Push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:${{ github.run_number }}

      # Step 8 (Optional): Deploy (e.g., to a VPS or Render)
      # You can add an SSH deploy step or a cloud provider action here.
      # Example for a VPS:
      # - name: Deploy via SSH
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:latest
      #       docker stop weather-portal || true
      #       docker rm weather-portal || true
      #       docker run -d -p 8000:8000 --name weather-portal ${{ secrets.DOCKERHUB_USERNAME }}/weather-portal:latest
